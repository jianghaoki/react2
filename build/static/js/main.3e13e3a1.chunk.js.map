{"version":3,"sources":["pages/Header.js","pages/Comm.js","pages/Login.js","pages/Home.js","pages/router.config.js","pages/Doc.js","pages/Core.js","pages/Guide.js","pages/Api.js","pages/Hooks.js","pages/Tuto.js","pages/Blog.js","App.js","pages/Hoc.js","pages/context.js","index.js"],"names":["Header","activeClassName","exact","to","Comm","Login","props","onClick","localStorage","setItem","history","replace","location","state","Home","console","log","style","textAlign","push","routes","path","component","withRouter","className","map","route","from","pri","RouteWithSubRoutes","PrivateRoute","render","Com","rest","getItem","pathname","App","withFetch","url","Topic","data","fetch","then","res","json","setState","this","Component","displayName","name","dangerouslySetInnerHTML","__html","content","item","title","React","createContext","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e13e3a1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login = ()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","\r\nimport React from 'react'\r\n\r\nconst Home = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import Comm from './Comm';\r\nimport Login from './Login'\r\nimport Home from './Home';\r\nimport Doc from './Doc';\r\nimport Tuto from './Tuto';\r\nimport Blog from './Blog';\r\nimport Guide from './Guide';\r\nimport Api from './Api';\r\nimport Core from './Core';\r\nimport Hooks from './Hooks';\r\n\r\nconst routes=[\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home\r\n    },\r\n    {\r\n        path:'/Doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n            {\r\n                path:'/doc/core',\r\n                component:Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path:'/Comm',\r\n        component:Comm\r\n    },\r\n    {\r\n        path:'/Login',\r\n        component:Login\r\n    },\r\n    {\r\n        path:'/Tuto',\r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/Blog',\r\n        component:Blog\r\n        \r\n    },\r\n]\r\nexport default routes;","import React,{useEffect} from 'react'\r\nimport {NavLink, Route, Redirect, useHistory, useLocation, useParams, useRouteMatch, withRouter} from 'react-router-dom'\r\nimport './doc.css'\r\nimport {NavBar,Icon} from 'antd-mobile'\r\nimport {RouteWithSubRoutes} from '../App';\r\nimport routes from './router.config';\r\n\r\nconst DocContent = (props)=>{\r\n    return <h1>\r\n        {props.match.params.type}\r\n    </h1>\r\n}\r\n\r\nconst Doc = ({routes}) => {\r\n\r\n    return (\r\n        <div className='doc'>\r\n            <div className=\"content\">\r\n                {/* 嵌套路由 */ }\r\n                {\r\n                    routes.map((route) => (\r\n                        <RouteWithSubRoutes  {...route} />\r\n                    ))\r\n                }\r\n                <Redirect from='/doc' to='/doc/core' />\r\n                <ol>\r\n                    <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                    <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                    <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                    <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <h1>Core</h1>\r\n    )\r\n}\r\n\r\nexport default Core","import React from 'react'\r\n\r\nconst Guide = ()=>{\r\n    return(\r\n        <h1>\r\n            Guide\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Guide;","import React from 'react'\r\n\r\nconst Api = ()=>{\r\n    return(\r\n        <h1>\r\n            Api\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Api;","import React from 'react'\r\n\r\nconst Hooks = ()=>{\r\n    return(\r\n        <h1>\r\n            Hooks\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Hooks;","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Header from './pages/Header';\r\nimport routes from './pages/router.config';\r\nimport Login from './pages/Login';\r\n\r\n\r\n// // 路由基本配置\r\n// // 路由传参(以及获取参数-props)\r\n// // 动态路由(/:page)\r\n// // js跳转\r\n// // 权限路由\r\n// // npm i antd-mobile --registry https://\r\n\r\nexport const  RouteWithSubRoutes = (route) => {\r\n\tif(route.pri){\r\n\t\treturn(\r\n\t\t\t<PrivateRoute {...route} routes={route.routes}></PrivateRoute>\r\n\t\t)\r\n\t}\r\n\telse{\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Route\r\n\t\t\t  path={route.path}\r\n\t\t\t  render={props => (\r\n\t\t\t\t<route.component {...props} routes={route.routes} />\r\n\t\t\t  )}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\t\r\n  }\r\n\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={ ({ location }) =>\r\n\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest}/>\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={ {\r\n\t\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\t\tstate: location\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst App = () => {\r\n\treturn <Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t{\r\n\t\t\t\troutes.map(({...rest})=>{\r\n\t\t\t\t\t// if(pri){\r\n\t\t\t\t\t// \treturn <PrivateRoute {...rest} />\r\n\t\t\t\t\t// }\r\n\t\t\t\t\treturn <RouteWithSubRoutes {...rest} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</Switch>\r\n\t</Router>\r\n}\r\n\r\nexport default App;\r\n\r\n// home组件这种配置方式会在\r\n// Home组件的props内注入四个属性\r\n// <Route exact path='/' component={ Home } />\r\n// <PrivateRoute path='/doc' component={ Doc } /> \r\n// <Route path='/doc/:id' component={ Doc } /> \r\n// <PrivateRoute path='/tuto' component={ Tuto } />\r\n// <PrivateRoute path='/blog' component={ Blog } />\r\n// <Route path='/comm' component={ Comm } />\r\n// <Route path='/login' component={ Login } /> \r\n// no-match \r\n// <Route component={()=><div>404</div>} /> \r\n// <Route path='*' component={ () => <div>404</div> } />\r\n// import Context from './context'\r\n// import Demo01 from './Demo01';\r\n// import { render } from 'react-dom';\r\n// console.log(Context);\r\n\r\n// class App extends React.Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:['hello','context'],\r\n//         }\r\n//     }\r\n//     changeData = (newData)=>{\r\n//         this.setState({data:[...this.state.data,newData]})\r\n//     }\r\n//     render(){\r\n//         return (\r\n//             <Context.Provider value={{\r\n//                 data:this.state.data,\r\n//                 changeData:this.changeData\r\n//             }}>\r\n//                 <Demo01 />\r\n//             </Context.Provider>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const Home=()=>{\r\n//     return <div>Home</div>\r\n// }\r\n// const About=(props)=>{\r\n//     console.log(props.location.state)\r\n//     return <div>About</div>\r\n// }\r\n// const Content=(props)=>{\r\n//     console.log(props)\r\n//     return <div>{props.match.params.page}</div>\r\n// }\r\n// 路由基本配置\r\n// 路由传参(以及获取参数-props)\r\n// 动态路由(/:page)\r\n// js跳转\r\n// 权限路由\r\n// npm i antd-mobile --registry https://\r\n\r\n// function PrivateRoute({ component: Com, ...rest }) {\r\n// \treturn (\r\n// \t\t<Route\r\n// \t\t\t{ ...rest }\r\n// \t\t\trender={ ({ location }) =>\r\n// \t\t\t\tlocalStorage.getItem('userinfo')\r\n// \t\t\t\t\t? <Com />\r\n// \t\t\t\t\t: (\r\n// \t\t\t\t\t\t<Redirect\r\n// \t\t\t\t\t\t\tto={ {\r\n// \t\t\t\t\t\t\t\tpathname: \"/login\",\r\n// \t\t\t\t\t\t\t\tstate: location\r\n// \t\t\t\t\t\t\t} }\r\n// \t\t\t\t\t\t/>\r\n// \t\t\t\t\t)\r\n// \t\t\t}\r\n// \t\t/>\r\n// \t);\r\n// }\r\n// const App = () => {\r\n// \treturn <Router>\r\n// \t\t<Header />\r\n// \t\t<Switch>\r\n// \t\t\t{/* home组件这种配置方式会在\r\n// \t\t\tHome组件的props内注入四个属性\r\n// \t\t\t */}\r\n// \t\t\t<Route exact path='/' component={ Home } />\r\n// \t\t\t<PrivateRoute path='/doc' component={ Doc } />\r\n// \t\t\t{/* <Route path='/doc/:id' component={ Doc } /> */}\r\n// \t\t\t<PrivateRoute path='/tuto' component={ Tuto } />\r\n// \t\t\t<PrivateRoute path='/blog' component={ Blog } />\r\n// \t\t\t<Route path='/comm' component={ Comm } />\r\n// \t\t\t<Route path='/login' component={ Login } />\r\n// \t\t\t{/* no-match */ }\r\n// \t\t\t{/* <Route component={()=><div>404</div>} /> */ }\r\n// \t\t\t<Route path='*' component={ () => <div>404</div> } />\r\n// \t\t</Switch>\r\n        \r\n// \t</Router>\r\n// }\r\n\r\n// const App=()=>{\r\n//     return <Router>\r\n//         <Header />\r\n//         <switch>\r\n//             {\r\n//                 routes.map(({pri,...rest})=>{\r\n//                     if(pri){\r\n//                         return<PrivateRoute{...rest}/>\r\n//                     }\r\n//                     return <Route {...rest}/>\r\n//                 })\r\n//             }\r\n//         </switch>\r\n//     </Router>\r\n// }\r\n\r\n\r\n// const Wendang=()=>{\r\n//     return <div>文档</div>\r\n// }\r\n// const Jiaocheng=()=>{\r\n//     return <div>教程</div>\r\n// }\r\n// const Boke=()=>{\r\n//     return <div>博客</div>\r\n// }\r\n// const Shequ=()=>{\r\n//     return <div>社区</div>\r\n// }\r\n// const itemStyle = {\r\n//     border: '1px dashed #ccc', margin: '10px', padding: '10px', boxShadow: '0 0 #ccc',\r\n//     color:'white'\r\n// };\r\n// const App = ()=>{\r\n//     return<Router>\r\n//         <ul>\r\n//             <li style = {itemStyle}><NavLink exact activeStyle={{color:'blue'}} to='/wendang'>文档</NavLink></li>\r\n//             <li style = {itemStyle}><NavLink exact activeStyle={{color:'blue'}} to='/jiaocheng'>教程</NavLink></li>\r\n//             <li style = {itemStyle}><NavLink exact activeStyle={{color:'blue'}} to='/boke'>博客</NavLink></li>\r\n//             <li style = {itemStyle}><NavLink exact activeStyle={{color:'blue'}} to='/shequ'>社区</NavLink></li>\r\n//         </ul>\r\n//         <Switch>\r\n//             <Route path='/wendang' component={Wendang}/>\r\n//             <Route path='/jiaocheng' component={Jiaocheng}/>\r\n//             <Route path='/boke' component={Boke}/>\r\n//             <Route path='/shequ' component={Shequ}/>\r\n//         </Switch>\r\n//     </Router>\r\n// }\r\n\r\n// const App = ()=>{\r\n//     return <Router>\r\n//         <ul>\r\n//             <li><NavLink exact activeStyle={{color:'blue'}} to='/'>home</NavLink></li>\r\n//             <li><NavLink exact activeStyle={{color:'blue'}} to={{\r\n//                 pathname:'/about',\r\n//                 state:{id:100}\r\n//             }}>about</NavLink></li>\r\n//             <li><NavLink exact activeStyle={{color:'blue'}} to='/news'>News</NavLink></li>\r\n//             <li><NavLink exact activeStyle={{color:'blue'}} to='/content/1'>Content01</NavLink></li>\r\n//             <li><NavLink exact activeStyle={{color:'blue'}} to='/content/2'>Content02</NavLink></li>\r\n//         </ul>\r\n\r\n        // <Switch>\r\n        // <Route exact path='/' component={Home}/>\r\n        // <Route path='/about' component={About}></Route>\r\n        // {/* <Route path='/about'>\r\n        //     <About/>\r\n        // </Route> */}\r\n        // <Route path='/news' render={()=><div>News</div>}/>\r\n        // <Route path='/content/:page' component={Content}/>\r\n        // </Switch>\r\n//     </Router>\r\n// }\r\n\r\n","// higher order component\r\nimport React, { Component } from 'react';\r\n\r\nconst withFetch = (Com,url)=>{\r\n    class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com {...this.props} data={this.state.data}/>\r\n        }\r\n    }\r\n    Topic.displayName= `withFetch(${Com.name})`\r\n    return Topic;\r\n}\r\n\r\nconst De = (props)=>{\r\n    return <div>\r\n        <h1>标题{props.name}</h1>\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}}\r\n        >\r\n        </div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\nconst Ho = (props)=>{\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// // setInterval(()=>{\n// //   let ele = <h1 id=\"title\" className=\"tit\">\n// //   <div>当前时间</div>\n// //   {new Date().toLocaleString()}\n// // </h1>;},1000\n// // );\n\n\n\n// // let ele = React.createElement(\n// //   'h1',\n// //   {id:'title'},\n// //   'hello react'\n// // )\n// //  console.log(ele);\n\n// // let ReactDOM = {\n// //   render(eleObj,container){\n// //     //解构\n// //     const{type,props} = eleObj;\n// //     //创建第一层节点\n// //     let ele = document.createElement(type);\n// //     //遍历属性对象，将属性添加到第一层节点对象上\n// //     for(const prop in props){\n// //       if(prop == 'children'){\n// //         if(typeof child == 'string'){\n// //           const txtNode = document.createTextNode(child);\n// //           ele.appendChild(textNode);\n// //           break;\n// //         }\n// //         //将第一层节点对象的子元素添加进去\n// //         props.children.forEach(child=>{\n// //           if(typeof child == 'string'){\n// //             const txtNode = document.createTextNode(child);\n// //             ele.appendChild(textNode);\n// //           }else{//递归\n// //             ReactDOM.render(child,ele);\n// //           }\n// //         })\n// //       }else{\n// //         ele[prop] = props[prop];\n// //       }\n// //     }\n// //     //将第一层dom节点添加到container中\n// //     container.appendChild(ele);\n// //   }\n// // }\n\n\n// // //函数组建\n// // function App(props){\n// //   const{title,id} = props;\n// //   return <div>\n// //     <div>hello</div>\n// //     <div>world</div>\n// //   </div>\n// // }\n// // //智能组件\n// // //class\n// // class Demo extends React.Component{\n// //   constructor(){\n// //     super();\n// //     //声明状态\n// //     this.state={\n// //       name:'Tom'\n// //     }\n// //   }\n\n// //   render(){\n// //     return<div>\n// //       <div>name:{this.state.name}</div>\n// //       <App title={this.state.name} id='app'/>\n// //       <App title='任意值' id='app'/>\n// //       <App title='任意值' id='app'/>\n// //       <App title='任意值' id='app'/>\n// //     </div>\n// //   }\n// // }\n\n// // ReactDOM.render(\n// //   <App title='abc'/>,\n// //   document.getElementById('root')\n// // );\n// import $ from 'jquery';\n// console.log($);\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {\n//       data:[]\n//     }\n//     // setTimeout(()=>{\n//     //   this.setState({data:[5,6,7,8,9]}) \n//     // },500)\n//     fetch('http://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(data=>{\n//       this.setState({data:data.data})\n//     })\n//   }\n//   render(){\n//     return<ul>{\n//       this.state.data.map(\n//         (item)=><li>{item}</li>\n//       )\n//     }\n//     </ul>\n//   }\n// }\n// ReactDOM.render(\n//   <div />,\n//   document.getElementById('root')\n// );\n\n\n\n//alt shift + 上下键  复制一行\n//alt +上下键   移动一行\n// let List = (props) => {\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item) => <li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   const handleClick = (num)=>{\n//     //事件对象\n//     console.log(num);\n//   }\n//   return <div>\n//     {\n//       btns.map(\n//         (item)=>(\n//         <button\n//           key={item}\n//           onClick={()=>handleClick(item)}\n//         >\n//         {item}</button>))\n//     }\n//   </div>\n// }\n\n// class Home extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//       data: []\n//     }\n//   }\n//   componentDidMount() {\n//     fetch('https://cnodejs.org/api/v1/topics')\n//       .then(res => res.json())\n//       .then(({ data }) => {\n//         console.log(data);\n//         this.setState({ data })\n//       })\n//   }\n//   getData = (page) => {\n//     fetch('https://cnodejs.org/api/v1/topics?page=' + page)\n//       .then(res => res.json())\n//       .then(({ data }) => {\n//         console.log(data);\n//         this.setState({ data })\n//       })\n//     console.log(page);\n//   }\n//   render() {\n//     const { data } = this.state;\n//     const btns = [1, 2, 3, 4, 5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item) => (\n//             <button\n//               key={item}\n//               onClick={() => this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//           ))\n//       }\n//       <List data={data} />\n//     </div>\n//   }\n// }\n\n\n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法\n  \n  import React from 'react';\n  import ReactDOM from 'react-dom';\n  import App from './App';\n  import Home from './pages/Home';\n  import Hoc,{Detail} from './pages/Hoc';\n  import Hook from './pages/Hook';\n  import Context from './pages/context'\n  //import 'antd-mobile/dist/antd-mobile.css';\n  //TodoList组件,大写字母开头一般为组件(导入)\n  \n  //渲染一个DOM节点\n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n\n  // let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\n  // fetch(url, {\n  //     method: 'post',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  // })\n  // .then(res=>res.json())\n  // .then(res=>console.log(res))\n  "],"sourceRoot":""}